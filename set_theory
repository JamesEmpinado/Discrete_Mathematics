	
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle 1.\\ X\\ and\\ B\\ are\\ disjoint:\\ X\\cap B =set()$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle 2.\\ X\\subseteq D\\ but\\ X\\nsubseteq B:\\ X\\subseteq D =True,\\ X\\nsubseteq B =False$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle 3.\\ X\\subseteq A\\ but\\ X\\not\\subset C:\\ X\\subseteq A =True,\\ X\\not\\subset C =True$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import display, Math\n",
    "\n",
    "A = {x for x in range(0, 10)}\n",
    "B = {2,4,6,8}\n",
    "C = {1,3,5,7,9}\n",
    "D = {3,4,5}\n",
    "X = {3,5}\n",
    "\n",
    "display(Math(r'A = ' + str(A)))\n",
    "display(Math(r'B = ' + str(B)))\n",
    "display(Math(r'C = ' + str(C)))\n",
    "display(Math(r'D = ' + str(D)))\n",
    "display(Math(r'X = ' + str(X)))\n",
    "\n",
    "display(Math(r'1.\\ X\\ and\\ B\\ are\\ disjoint:\\ X\\cap B =' + str(X.intersection(B))))\n",
    "display(Math(r'2.\\ X\\subseteq D\\ but\\ X\\nsubseteq B:\\ X\\subseteq D =' + str(X.issubset(D)) + r',\\ X\\nsubseteq B =' + str(X.issubset(B))))\n",
    "display(Math(r'3.\\ X\\subseteq A\\ but\\ X\\not\\subset C:\\ X\\subseteq A =' + str(X.issubset(A)) + r',\\ X\\not\\subset C =' + str(X.issubset(C))))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa4dd8b1-9fc9-4c20-acda-fa32311798b7",
   "metadata": {},
   "source": [
    "X and B are disjoint: Since X={3,5} and B={2,4,6,8}, there are no elements in common between X and B, so they are disjoint.\n",
    "\n",
    "X⊆D but X⊈B: Since all elements of X are also elements of D, we can conclude that X⊆D. However, not all elements of X are elements of B, so we can conclude that X⊈B.\n",
    "\n",
    "X⊆A but X$\\not\\subset$C: Since all elements of X are also elements of A, we can conclude that X⊆A. However, not all elements of X are elements of C, so we can conclude that X$\\not\\subset$C."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72180416-9a65-4fd3-ae72-9f7586965ea0",
   "metadata": {},
   "source": [
    "# 3. Set Operations\n",
    "\n",
    "Given:<br>\n",
    "$\\textbf{U} = \\{1,2,3,4,5\\}$<br>\n",
    "$\\textbf{A} = \\{1,2,3,4,5\\}$<br>\n",
    "$\\textbf{B} = \\{4,5,6,7\\}$<br>\n",
    "$\\textbf{C} = \\{5,6,7,8,9\\}$<br>\n",
    "$\\textbf{D} = \\{1,3,5,7,9\\}$<br>\n",
    "$\\textbf{E} = \\{2,4,6,8\\}$<br>\n",
    "$\\textbf{F} = \\{1,5,9\\}$<br>\n",
    "- $\\textbf{C} \\oplus \\textbf{D}$\n",
    "- $\\textbf{A} \\backslash \\textbf{B}$\n",
    "- $\\textbf{B} \\backslash \\textbf{A}$\n",
    "- $\\textbf{E} \\oplus \\textbf{F}$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44316aad-b21c-4ccb-b4f4-6a1f55e8db3a",
   "metadata": {},
   "source": [
    "from IPython.display import Latex\r\n",
    "Latex(r\"\"\"\\begin{eqnarray}\r\n",
    "C \\oplus D &=& (C \\cup D) \\backslash (C \\cap D) \\\\\r\n",
    "&=& \\{5,6,7,8,9\\} \\cup \\{1,3,5,7,9\\} \\backslash \\{5,7\\} \\\\\r\n",
    "&=& \\{1,3,5,6,7,8,9\\} \\backslash \\{5,7\\} \\\\\r\n",
    "&=& \\{1,3,6,8,9\n",
    "\\} \\\\\r\n",
    "A \\backslash B &=& A \\cap B^{c} \\\\\r\n",
    "&=& \\{1,2,3,4,5\\} \\cap \\{1,2,3\\} \\\\\r\n",
    "&=& \\{1,\n",
    "2,3\\} \\\\\r\n",
    "B \\backslash A &=& B \\cap A^{c} \\\\\r\n",
    "&=& \\{4,5,6,7\\} \\cap \\{6,7\\} \\\\\r\n",
    "&=&\n",
    " \\{6,7\\} \\\\\r\n",
    "E \\oplus F &=& (E \\cup F) \\backslash (E \\cap F) \\\\\r\n",
    "&=& \\{2,4,6,8\\} \\cup \\{1,5,9\\} \\backslash (\\varnothing) \\\\\r\n",
    "&=&  \\{1,2,4,5,6,8,9\\}\r\n",
    "\\end{eqnarray}\"\"\")\r\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7832242d-99a3-4989-8861-84c93ec699cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C xor D: {8, 1, 3, 6}\n",
      "A - B: {1, 2, 3}\n",
      "B - A: {6, 7}\n",
      "E xor F: {1, 2, 4, 5, 6, 8, 9}\n"
     ]
    }
   ],
   "source": [
    "U = {1, 2 ,3 ,4 ,5}\n",
    "A = {1 ,2 ,3 ,4 ,5}\n",
    "B = {4 ,5 ,6 ,7}\n",
    "C = {5 ,6 ,7 ,8 ,9}\n",
    "D = {1 ,3 ,5 ,7 ,9}\n",
    "E = {2 ,4 ,6 ,8}\n",
    "F = {1 ,5 ,9}\n",
    "\n",
    "# C xor D\n",
    "C_xor_D = (C | D) - (C & D)\n",
    "print(f'C xor D: {C_xor_D}')\n",
    "\n",
    "# A - B\n",
    "A_minus_B = A - B\n",
    "print(f'A - B: {A_minus_B}')\n",
    "\n",
    "# B - A\n",
    "B_minus_A = B - A\n",
    "print(f'B - A: {B_minus_A}')\n",
    "\n",
    "# E xor F\n",
    "E_xor_F = (E | F) - (E & F)\n",
    "print(f'E xor F: {E_xor_F}')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aff7cc3a-aacb-4af3-a811-6808203c7ffe",
   "metadata": {},
   "source": [
    "# 4. Finite Sets and The Counting Principles\n",
    "---\n",
    "\n",
    "In a Survey of 120 People, it was found that:\n",
    "- 65 read Newsweek Magazine\n",
    "- 45 read Times Magazine\n",
    "- 42 read Fortune Magazine\n",
    "- 20 read Both Newsweek and Time\n",
    "- 25 read both Newsweek and Fortune\n",
    "- 15 read both Time and Fortune\n",
    "- 8 read all three magazines\n",
    "With these information do the following:<br>\n",
    "1. Draw the venn diagram using python.\n",
    "2. Find the number of people who read at $\\textbf{\"least one\"}$ of the three magazines.\n",
    "3. Find the number of people who read exactly one magazine.\n",
    "<br>\n",
    "<br>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6609e5e9-c369-49cb-a6f5-aedae780ed06",
   "metadata": {},
   "outputs": [
